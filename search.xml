<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>hexo_note</title>
      <link href="/2022/05/08/hexo-note/"/>
      <url>/2022/05/08/hexo-note/</url>
      
        <content type="html"><![CDATA[<h1 id="博客框架hexo本地的安装说明"><a href="#博客框架hexo本地的安装说明" class="headerlink" title="博客框架hexo本地的安装说明"></a>博客框架hexo本地的安装说明</h1><ul><li>前提准备了解<code>hexo</code>框架安装需要什么依赖</li><li><code>hexo</code>依赖<code>nodejs</code> 然后库的传输需要<code>git</code><h2 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h2></li><li><input disabled="" type="checkbox"> 通常来说本地环境的安装比服务器更容易搭建因为服务器环境往往需要考虑更多比如安全问题还有各种安装问题就比如我<code>centos8.2</code>的yum yum update了一下居然报错了发现没有这个源查了一下原来是cetos官网已经不对<code>centos8</code>支持</li><li><code>macos</code>使用<code>hombrew</code>下载<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">brew install git </span><br><span class="line">brew install nodejs</span><br></pre></td></tr></table></figure></li><li><code>centos</code> 可以使用<code>yum</code>或者<code>weget</code>下载官方解压包自己解压<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum install git</span><br><span class="line">yum install nodejs</span><br></pre></td></tr></table></figure><h2 id="安装hexo框架"><a href="#安装hexo框架" class="headerlink" title="安装hexo框架"></a>安装<code>hexo</code>框架</h2></li><li>创建一个文件夹你的<code>hexo</code>框架就下载在里面<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br></pre></td></tr></table></figure></li><li><input disabled="" type="checkbox"> 现在你的hexo框架就基本上安装完毕了</li><li>目录应该跟下面大差不差<br><img src="https://lihangsmart.oss-cn-hangzhou.aliyuncs.com/img/20220508151742.png" alt="hexo_1"> </li><li><code>config.yml</code>就是hexo的配置文件一些关于hexo的配置在里面配置<h2 id="hexo一些基本使用"><a href="#hexo一些基本使用" class="headerlink" title="hexo一些基本使用"></a>hexo一些基本使用</h2> <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo new post &quot;name&quot; #新建文章</span><br><span class="line">hexo g  #渲染</span><br><span class="line">hexo s  #部署到本地</span><br><span class="line">hexo d  #部署到远程git库</span><br></pre></td></tr></table></figure><h2 id="git库的连接"><a href="#git库的连接" class="headerlink" title="git库的连接"></a><code>git库</code>的连接</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git config --global user.name &quot;username&quot;</span><br><span class="line">git config --global user.email &quot;1941689965@qq.com&quot;</span><br><span class="line">用户名和邮箱自行修改</span><br></pre></td></tr></table></figure></li><li>用<code>ssh</code>的话还需要获取<code>ssh</code>的公钥 </li><li>如果你不知道有没有一般来说ssh的共钥如果有就放在你家目录下的.ssh文件中<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cat ~/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure></li><li>如果有就是上面那条命令查看公钥</li><li>没有就创建一个key<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;1941689965@qq.com&quot;</span><br></pre></td></tr></table></figure></li><li>然后重复之前的操作开查看密钥<h2 id="远程库"><a href="#远程库" class="headerlink" title="远程库"></a>远程库</h2></li><li><input disabled="" type="checkbox"> 远程库的选择(github，码云上都有类似服务Pages一个静态网站,你也可以把你的库推送到你的服务器上)</li><li>githubpage由于访问速度的关系不推荐有条件的话可以买个云轻量应用服务器,注册一个域名当然如果在服务器上搭建网站服务器在国内也需要备案</li><li>gittee还没有使用过不做评价</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 个人博客 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>markdown</title>
      <link href="/2022/05/07/markdown/"/>
      <url>/2022/05/07/markdown/</url>
      
        <content type="html"><![CDATA[<h3 id="Markdown介绍"><a href="#Markdown介绍" class="headerlink" title="Markdown介绍"></a>Markdown介绍</h3><ul><li>Markdown 是一种轻量级标记语言，它允许人们使用易读易写的纯文本格式编写文档。</li><li>Markdown 语言在 2004 由约翰·格鲁伯（英语：John Gruber）创建。</li><li>Markdown 编写的文档可以导出 HTML 、Word、图像、PDF、Epub 等多种格式的文档。</li><li>Markdown 编写的文档后缀为 <code>.md</code>, <code>.markdown</code>。</li></ul><h2 id="Typora基本技巧"><a href="#Typora基本技巧" class="headerlink" title="Typora基本技巧"></a>Typora基本技巧</h2><h3 id="常用快捷键"><a href="#常用快捷键" class="headerlink" title="常用快捷键"></a>常用快捷键</h3><ul><li>加粗： <code>Ctrl + B</code></li><li>撤销： <code>Ctrl + Z</code></li><li>字体倾斜 ：<code>Ctrl+I</code></li><li>下划线：<code>Ctrl+U</code></li><li>多级标题： <code>Ctrl + 1~6</code></li><li>有序列表：<code>Ctrl + Shift + [</code></li><li>无序列表：<code>Ctrl + Shift + ]</code></li><li>降级快捷键 ：<code>Tab</code></li><li>升级快捷键：<code>Shift + Tab</code></li><li>插入链接： <code>Ctrl + K</code></li><li>插入公式： <code>Ctrl + Shift + M</code></li><li>行内代码： <code>Ctrl + Shift + K</code></li><li>插入图片： <code>Ctrl + Shift + I</code></li><li>返回Typora顶部：<code>Ctrl+Home</code></li><li>返回Typora底部 ：<code>Ctrl+End</code></li><li>创建表格 ：<code>Ctrl+T</code></li><li>选中某句话 ：<code>Ctrl+L</code></li><li>选中某个单词 ：<code>Ctrl+D</code></li><li>选中相同格式的文字 ：<code>Ctrl+E</code></li><li>搜索: <code>Ctrl+F</code></li><li>搜索并替换 ：<code>Ctrl+H</code></li><li>删除线 ：<code>Alt+Shift+5</code></li><li>引用 ：<code>Ctrl+Shift+Q</code></li><li>生成目录：<code>[TOC]+Enter</code></li></ul><p>注：一些实体符号需要在实体符号之前加” \ ”才能够显示</p><h3 id="菜单"><a href="#菜单" class="headerlink" title="菜单"></a>菜单</h3><p>输入[TOC]即可产生菜单，菜单会自动更新</p><h3 id="区域元素"><a href="#区域元素" class="headerlink" title="区域元素"></a>区域元素</h3><figure class="highlight text"><table><tr><td class="code"><pre><span class="line">YAML FONT Matters</span><br></pre></td></tr></table></figure><p>在文章的最上方输入—，按换行键产生，然后在里面输入内容即可。</p><h3 id="段落"><a href="#段落" class="headerlink" title="段落"></a>段落</h3><p>按换行键[Enter]建立新的一行,按<code>Shift</code>+<code>Enter</code>可以创建一个比段落间距更小的行间距。可在行尾插入打断线，禁止向后插入</p><figure class="highlight text"><table><tr><td class="code"><pre><span class="line">打断线&lt;br/&gt;后面的内容将自动换行</span><br></pre></td></tr></table></figure><h3 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h3><p>开头#的个数表示，空格+文字。标题有1~6个级别，#表示开始，按换行键结束</p><figure class="highlight text"><table><tr><td class="code"><pre><span class="line"># 一级标题 快捷键为 Ctrl + 1</span><br><span class="line">## 二级标题 快捷键为 Ctrl + 2</span><br><span class="line">......</span><br><span class="line">###### 六级标题 快捷键为 Ctrl + 6</span><br></pre></td></tr></table></figure><h3 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h3><p>斜体以**或__括住</p><figure class="highlight text"><table><tr><td class="code"><pre><span class="line">*这是斜体字体1*_这是斜体字体2_</span><br></pre></td></tr></table></figure><p><em>这是斜体字体1</em><br><em>这是斜体字体2</em></p><p>加粗<br>开头<code>**</code>，结尾<code>**</code>。<br>或者开头<code>__</code>,结尾<code>__</code>(两个短横线)。</p><figure class="highlight text"><table><tr><td class="code"><pre><span class="line">**这是加粗字体1** __这是加粗字体2__</span><br></pre></td></tr></table></figure><p>这是加粗字体1<br>这是加粗字体2</p><p>删除线<br>开头<code>~~</code>，结尾<code>~~</code>。</p><figure class="highlight text"><table><tr><td class="code"><pre><span class="line">~~这是错误文字~~</span><br></pre></td></tr></table></figure><p>这是错误文字</p><p>下划线使用HTML标签<u>下划线</u></p><figure class="highlight text"><table><tr><td class="code"><pre><span class="line">&lt;u&gt;下划线&lt;/u&gt;</span><br></pre></td></tr></table></figure><p>下划线</p><p>高亮<br><code>==内容==</code>，需要自己在偏好设置里面打开这项功能</p><figure class="highlight text"><table><tr><td class="code"><pre><span class="line">==高亮==</span><br><span class="line">高亮</span><br></pre></td></tr></table></figure><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><p>行内输入代码块快捷键： <code>Ctrl + Shift + K</code></p><ol><li>开头&#96;&#96;&#96;+语言名，开启代码块，换行键换行，光标下移键跳出<br>示例：</li></ol><figure class="highlight text"><table><tr><td class="code"><pre><span class="line">print(&quot;hello,python!&quot;&quot;)</span><br></pre></td></tr></table></figure><ol><li>用两个&#96;在正常段落中表示代码<br>例如：</li></ol><figure class="highlight text"><table><tr><td class="code"><pre><span class="line">Use the `printf()`function.</span><br></pre></td></tr></table></figure><p>Use the <code>printf()</code>function.</p><h3 id="数学式"><a href="#数学式" class="headerlink" title="数学式"></a>数学式</h3><p>打开Typora选择数学模块</p><ul><li>点击“段落”—&gt;“公式块”</li><li>快捷键Ctrl+Shift+m</li><li><code>“$$”+回车</code></li></ul><p>以上三种方式都能打开数学公式的编辑栏。</p><p>示例：</p><figure class="highlight text"><table><tr><td class="code"><pre><span class="line">输入$，然后按ESC键，之后输入Tex命令，可预览</span><br><span class="line">例如：</span><br><span class="line">$\lim_&#123;x\to\infty&#125;\exp(-x)=0$</span><br></pre></td></tr></table></figure><p><img src="https://pic2.zhimg.com/80/v2-c0139796d5848b706c9f2f4d79c7a749_720w.png" alt="img"></p><p>下标使用~~括住内容。需要自己在偏好设置里面打开这项功能</p><figure class="highlight text"><table><tr><td class="code"><pre><span class="line">H~2~O</span><br></pre></td></tr></table></figure><p>H2O</p><p>上标</p><p>使用^括住内容。需要自己在偏好设置里面打开这项功能</p><figure class="highlight text"><table><tr><td class="code"><pre><span class="line">y^2^=4</span><br></pre></td></tr></table></figure><p>y2&#x3D;4</p><h3 id="表情"><a href="#表情" class="headerlink" title="表情"></a>表情</h3><p>Typora语法支持添加emoji表情，输入不同的符号码（两个冒号包围的字符）可以显示出不同的表情。</p><figure class="highlight text"><table><tr><td class="code"><pre><span class="line">以:开始，然后输入表情的英文单词,以：结尾，将直接输入该表情.例如：</span><br><span class="line">:smile</span><br><span class="line">:cry</span><br><span class="line">:happy</span><br></pre></td></tr></table></figure><h3 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h3><p>开头|+列名+|+列名+|+换行键，创建一个2*2表格，<code>Ctrl+Enter</code>可建立新行。</p><p>示例：</p><figure class="highlight text"><table><tr><td class="code"><pre><span class="line">|第一列|第二列|</span><br></pre></td></tr></table></figure><h3 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h3><p>输入 <code>***</code> 或者 <code>---</code>,按换行键换行，即可绘制一条水平线。</p><figure class="highlight text"><table><tr><td class="code"><pre><span class="line">***---</span><br></pre></td></tr></table></figure><hr><p>上下是水平线</p><h3 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h3><p>开头&gt;表示，空格+文字，按换行键换行，双按换行跳出</p><figure class="highlight text"><table><tr><td class="code"><pre><span class="line">&gt; 引注1</span><br><span class="line">&gt; ···</span><br><span class="line">&gt; 引注2</span><br><span class="line">&gt;还有一行，双按换行键跳出引注模式</span><br></pre></td></tr></table></figure><p>示例：</p><blockquote><p>引注1<br>···<br>引注2还有一行，双按换行键跳出引注模式</p></blockquote><p>普通引用</p><blockquote><p>空格 + 引用文字：在引用的文字前加&gt;+空格即可，引用可以嵌套。</p></blockquote><figure class="highlight text"><table><tr><td class="code"><pre><span class="line">&gt; 引用文本前使用 [大于号+空格]</span><br><span class="line">&gt; 这行可以不加，新起一行都要加上哦</span><br><span class="line">&gt;这是引用的内容</span><br><span class="line">&gt;&gt;这是引用的内容</span><br></pre></td></tr></table></figure><p>示例：</p><blockquote><p>引用文本前使用 [大于号+空格]这行可以不加，新起一行都要加上哦<br>这是引用的内容<br>这是引用的内容</p></blockquote><p>列表中使用</p><figure class="highlight text"><table><tr><td class="code"><pre><span class="line">* 第一项   </span><br><span class="line">&gt; 引用1    </span><br><span class="line">&gt; 引用2</span><br><span class="line">* 第二项</span><br></pre></td></tr></table></figure><p>示例：</p><ul><li>第一项</li></ul><blockquote><p>引用1引用2</p></blockquote><ul><li>第二项</li></ul><p>引用里嵌套引用</p><figure class="highlight text"><table><tr><td class="code"><pre><span class="line">&gt; 最外层引用</span><br><span class="line">&gt; &gt; 多一个 </span><br><span class="line">&gt; 嵌套一层引用</span><br><span class="line">&gt; &gt; &gt; 可以嵌套很多层</span><br></pre></td></tr></table></figure><p>引用里嵌套列表</p><figure class="highlight text"><table><tr><td class="code"><pre><span class="line">&gt; - 这是引用里嵌套的一个列表</span><br><span class="line">&gt; - 还可以有子列表</span><br><span class="line">&gt;     * 子列表需要从 - 之后延后四个空格开始</span><br></pre></td></tr></table></figure><p>引用里嵌套代码块sdsd</p><figure class="highlight text"><table><tr><td class="code"><pre><span class="line">&gt;     同样的，在前面加四个空格形成代码块</span><br></pre></td></tr></table></figure><blockquote><p>或者使用 &#96;&#96;&#96; 形成代码块</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">```</span><br><span class="line"></span><br><span class="line">### 脚注</span><br><span class="line"></span><br><span class="line">在需要添加脚注的文字后面+[+^+序列+]，注释的产生可以鼠标放置其上单击自动产生，添加信息</span><br><span class="line"></span><br><span class="line">或人工添加+[+^+序列+]+:</span><br><span class="line"></span><br><span class="line">```text</span><br><span class="line">脚注产生的方法[^footnote].</span><br><span class="line">[^footnote]:这个就是&quot;脚注&quot;</span><br></pre></td></tr></table></figure></blockquote><p>脚注的产生方法[1]</p><h3 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h3><p>链接<br>输入网址，单击链接，展开后可编辑<br>ctr+单击，打开链接<br>例如：<a href="https://link.zhihu.com/?target=https://www.baidu.com">https://www.baidu.com</a></p><p>常用链接方法</p><figure class="highlight text"><table><tr><td class="code"><pre><span class="line">文字链接 [链接名称](http://链接网址)网址链接 &lt;http://链接网址&gt;</span><br></pre></td></tr></table></figure><p>示例效果：百度</p><p>超链接</p><p>格式1：用[ ]括住要超链接的内容，紧接着用( )括住超链接源+名字，超链接源后面+超链接命名<br>同样ctrl+单击，打开链接例如：</p><figure class="highlight text"><table><tr><td class="code"><pre><span class="line">这是[百度](https://www.baidu.com)官网</span><br></pre></td></tr></table></figure><p>这是 百度官网格式2：超链接 title可加可不加</p><figure class="highlight text"><table><tr><td class="code"><pre><span class="line">This is [an example](http://example.com/ &quot;Title&quot;) inline link.</span><br><span class="line">[This link](http://example.net/) has no title attribute.</span><br></pre></td></tr></table></figure><p>This is an example inline link.This link has no title attribute.</p><p>高级链接技巧</p><p>使用[+超链接文字+]+[+标签+]，创建可定义链接<br>ctrl+单击，打开链接。示例1：</p><figure class="highlight text"><table><tr><td class="code"><pre><span class="line">这是[百度][id][id]:https://www.baidu.com</span><br></pre></td></tr></table></figure><p>这是百度示例2：</p><figure class="highlight text"><table><tr><td class="code"><pre><span class="line">这个链接用 1 作为网址变量 [Google][1].</span><br><span class="line">这个链接用 yahoo 作为网址变量 [Yahoo!][yahoo].</span><br><span class="line">然后在文档的结尾为变量赋值（网址）  </span><br><span class="line">[1]: http://www.google.com/  </span><br><span class="line">[yahoo]: http://www.yahoo.com/</span><br></pre></td></tr></table></figure><h3 id="URLs"><a href="#URLs" class="headerlink" title="URLs"></a>URLs</h3><p>用&lt;&gt;括住url，可手动设置url对于标准URLs，可自动识别</p><figure class="highlight text"><table><tr><td class="code"><pre><span class="line">&lt;www.baidu.com&gt;</span><br></pre></td></tr></table></figure><p>&lt;<a href="http://www.baidu.com&gt;/">www.baidu.com&gt;</a></p><h3 id="序列"><a href="#序列" class="headerlink" title="序列"></a>序列</h3><p>开头*&#x2F;+&#x2F;- 加空格+文字，可以创建无序序列，换行键换行，删除键+shift+tab跳出<br>开头1.加空格+后接文字，可以创建有序序列例：</p><ul><li>第一个无序序列</li><li>第二个无序序列</li><li>······</li></ul><ol><li>第一个有序序列</li><li>第二个有序序列</li><li>······</li></ol><p>可选序列</p><p>开头序列+空格+[ ]+空格+文字，换行键换行，删除键+shift+tab跳出例如：</p><figure class="highlight text"><table><tr><td class="code"><pre><span class="line">- [ ] 第一个可选序列</span><br><span class="line">- [ ] 第二个可选序列</span><br><span class="line">- [ ] 第三个可选序列</span><br><span class="line">- [x] 第四个可选序列</span><br></pre></td></tr></table></figure><ul><li>第一个可选序列</li><li>第二个可选序列</li><li>第三个可选序列</li><li>第四个可选序列<br>总结：先输入减号，然后输入空格，之后就变成了黑色圆点，在输入[]，在中间加个空格，回车就可以注：任务列表无快捷键，可以点击菜单栏段落，任务列表。</li></ul><h3 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h3><blockquote><p>Typora文本文档中有使用图片内容，如果需要发布在各个兼容Markdown的软件平台，需要预先上传文档中的图片至图床，再通过对图床的图片链接调用，才能正常显示，否则各个平台将无法看到该文档图片。<br>免费图床网址：<a href="https://link.zhihu.com/?target=https://sm.ms/">https://sm.ms/</a>图床设置：[Typora图床自动上传图片设置篇]</p></blockquote><ol><li>手动添加：跟链接的方法区别在于前面加了个感叹号 <code>!</code>，这样是不是觉得好记多了呢？</li></ol><figure class="highlight text"><table><tr><td class="code"><pre><span class="line">![图片名称](http://图片网址)</span><br></pre></td></tr></table></figure><ol><li>当然，你也可以像网址那样对图片网址使用变量</li></ol><figure class="highlight text"><table><tr><td class="code"><pre><span class="line">这个链接用 1 作为网址变量 [Google][1].</span><br><span class="line">然后在文档的结尾位变量赋值（网址） </span><br><span class="line"></span><br><span class="line">[1]: http://www.google.com/logo.png</span><br></pre></td></tr></table></figure><ol><li>除了以上2种方式之外，还可以直接将图片拖拽进来，自动生成链接。</li></ol><figure class="highlight text"><table><tr><td class="code"><pre><span class="line">![显示的文字](C:\Users\Hider\Desktop\echart.png &quot;图片标题&quot;)</span><br><span class="line">![显示的文字](C:\Users\Hider\Desktop\echart.png)</span><br></pre></td></tr></table></figure><h2 id="二、Typora图床设置篇章"><a href="#二、Typora图床设置篇章" class="headerlink" title="二、Typora图床设置篇章"></a>二、Typora图床设置篇章</h2><p>Typora文本文档中有使用图片内容，如果需要发布在各个兼容Markdown的软件平台，需要预先上传文档中的图片至图床，再通过对图床的图片链接调用，才能正常显示，否则各个平台将无法看到该文档图片。</p><blockquote><p>图床意义：就是专门用来存放图片，同时允许你把图片对外连接的网上空间，不少图床都是免费的。</p></blockquote><p>图床工具，就是自动把本地图片转换成链接的一款工具，网络上有很多图床工具。</p><p>Typora文件偏好属性&gt;上传服务设定&gt;选择PicGo-Core（command line&gt;选择下载更新如图一</p><p><img src="https://pic1.zhimg.com/80/v2-c94e3203acb34c2248b4b4cc36cfda8c_720w.jpg" alt="img">图一</p><p>图二为更新下载完成状态</p><p><img src="https://pic2.zhimg.com/80/v2-65389866fb0aae9443c3e8787c8666d5_720w.jpg" alt="img">图二</p><p>图三打开配置文件后的文件config.json</p><p><img src="https://pic4.zhimg.com/80/v2-613d1e6d34d329ce61c687d272d5d203_720w.jpg" alt="img">图三</p><p>图四为图床网站，自己注册新的账号</p><p><img src="https://pic2.zhimg.com/80/v2-cc8839b95d32fc2aa034b93355fe9f41_720w.jpg" alt="img">图四</p><p>如图图五找到账号中相应的token，若没有，生成即可</p><p><img src="https://pic2.zhimg.com/80/v2-e9f78eee9697588f06b6018b7172df79_720w.jpg" alt="img">图五</p><p>按照图六格式添加相应的内容代码后保存</p><p><img src="https://pic1.zhimg.com/80/v2-1b80c13d0095786732be0d9f0fc15be0_720w.jpg" alt="img">图六</p><p>回到偏好设置如图一中的验证图片上传选项功能，若出现图七提示，说明，图床自动上传功能设置成功。</p><p>![img](<a href="https://pic3.zhimg.com/80/v2-5cd68ecdd2e4471a9d2a0ba40233d65e_720w.jpg">https://pic3.zhimg.com/80/v2-5cd68ecdd2e4471a9d2a0ba40233d65e_720w.jpg</a>　　</p><ol><li>这个就是脚注 ↩</li><li><table><thead><tr><th align="center">&lt;++&gt;</th><th align="center">&lt;++&gt;</th><th align="center">&lt;++&gt;</th><th align="center">&lt;++&gt;</th></tr></thead><tbody><tr><td align="center">&lt;++&gt;</td><td align="center">&lt;++&gt;</td><td align="center">&lt;++&gt;</td><td align="center">&lt;++&gt;</td></tr><tr><td align="center">&lt;++&gt;</td><td align="center">&lt;++&gt;</td><td align="center">&lt;++&gt;</td><td align="center">&lt;++&gt;</td></tr><tr><td align="center">&lt;++&gt;</td><td align="center">&lt;++&gt;</td><td align="center">&lt;++&gt;</td><td align="center">&lt;++&gt;</td></tr><tr><td align="center">&lt;++&gt;</td><td align="center">&lt;++&gt;</td><td align="center">&lt;++&gt;</td><td align="center">&lt;++&gt;</td></tr></tbody></table></li></ol><ul><li>sdsadasd</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>iterm2 and vim_note</title>
      <link href="/2022/05/07/iterm2%20and%20vim_note/"/>
      <url>/2022/05/07/iterm2%20and%20vim_note/</url>
      
        <content type="html"><![CDATA[<p>权限的切换</p><p>1.普通用户-&gt;root<br>mac打开终端默认是当前登录用户，若要切换到root用户，使用命令：</p><p>第一种：<br>(1) 输入 sudo -i 或者 su - 活着 su - root 然后回车<br>(2) 输入密码，就可以进入root用户<br>(3) 这种方法的终端显示形式为：usernamedeMacBook-Pro:~ root#</p><p>第二种：<br>(1) 输入sudo su然后回车<br>(2) 输入密码，就可以进入root用户<br>(3) 终端显示形式：sh-3.2#</p><p>2.root-&gt;普通用户<br>第一种：从root用户进入你想登陆的普通用户的方法，这里普通用户名用 username 来举例<br>(1) 输入 su - username 然后回车<br>(2) 就可以进入username用户<br>(3) 这种方法的终端显示形式为：usernamedeMacBook-Pro:~ username$</p><p>第二种：<br>(1) 输入su username 然后回车<br>(2) 直接进入username用户<br>(3) 终端显示形式：bash-3.2<br>    vim快捷键<br>gg最前面</p><p>b就是前一个单词的开头 w下一个单词的开头</p><p>GG最后面<br>nyy 复制从光标一下数n行<br>ndd 一样的道理<br>v是选中<br>f什么光标移动最近的什么</p><p>yank all word</p><p>Yaw 复制一个单词</p><p>yy复制整行</p><p>d删除</p><p>u撤销</p><p>:vs垂直切割打开窗口</p><p>:split水平切割打开窗口</p><p>请注意，代替,,;可以用作分隔符。不同的是，在 的情况下from,to，to是相对于当前行的，而在使用时from;to，to是相对于from的地址的！假设您在第 5 行，:1,+1d将删除第 1 行到第 6 行，而:1;+1d只会删除第 1 行和第 2 行。</p><p>该&#x2F;地址可以在另一个地址之前。这允许您堆叠 模式，例如：</p><p>: &#x2F;foo&#x2F;&#x2F;bar&#x2F;&#x2F;quux&#x2F; d<br>这将删除当前行之后包含“foo”的第一行之后包含“bar”的第一行之后包含“quux”的第一行。<br>将’&#x2F;g’或<code>/g</code>放在标记前面以形成动作。</p><p>使用mm记住与标志“M”的当前位置。移动文件，然后通过’m（第一个非空白）或&#96;m（精确列）跳回。退出 Vim 后会记住小写标记，如果你告诉你的 viminfo 文件这样做，请参阅:h viminfo-‘.</p><p>使用mM文件标记“M”来记住当前位置。切换到另一个缓冲区并通过’M或切换回来&#96;M。</p><p>其他动议包括：</p><p>运动跳到..<br>‘[, <code>[先前更改或猛拉的文本的第一行或字符。 &#39;], </code>]先前更改或猛拉的文本的最后一行或字符。<br>‘&lt;, <code>&lt;最后一个视觉选择的起始行或字符。 &#39;&gt;, </code>&gt;最后一个视觉选择的结束行或字符。<br>‘’, &#96;&#96;最近一次跳跃前的位置。<br>‘“, <code>&quot;最后退出当前缓冲区时的位置。 &#39;^, </code>^上次插入停止的位置。<br>‘., <code>.上次更改的位置。 &#39;(, </code>(当前句子的开头。<br>‘), <code>)当前句子的结尾。 &#39;&#123;, </code>{当前段落的开头。<br>‘}, &#96;}当前段落的结尾。<br>也可以在范围内使用标记。您可能之前看到过并想知道它的含义：在可视模式下选择一些文本并执行:，命令行将带有:’&lt;,’&gt;，这意味着以下命令将获得一个表示可视选择的范围。</p><p>使用:marks列出所有标记。阅读中的所有内容:h mark-motions。</p><p>动作、操作符、文本对象<br>动作移动光标。你们都知道h&#x2F; j&#x2F; k&#x2F; l。或w和b。甚至 &#x2F;是一个动作。他们也算一算。2?the<cr>跳转到“the”的倒数第二次出现。</p><p>有关:h navigation所有可用动作，请参阅下面的所有内容。</p><p>运营商作用于文本的区域，例如d，~，gU，&gt;仅举几例。它们在两种情况下使用，正常模式或可视模式。在正常模式下，运算符首先出现，然后是动作，例如&gt;j。在可视模式下，操作员只需对选择进行操作，例如Vjd。</p><p>像动作一样，运算符进行计数，例如2gUw使当前单词的其余部分和下一个单词大写。由于动作和操作符需要计数，所以 2gU2w工作得一样好并且执行gU2w两次。</p><p>查看:h operator所有可用的运算符。使用:set tildeop使~ 充当运营商。</p><p>文本对象作用于周围区域，与作用于一个方向的运动相反。实际上，它们作用于对象，例如整个单词、整个句子、括号之间的所有内容，等等。</p><p>在普通模式下不能使用文本对象来移动光标，因为即使是最熟练的光标也无法同时跳转到两个方向。但是它在可视模式下工作，因为对象的一侧已经被选中，光标只是跳到另一侧。</p><p>文本对象以i(think inner ) 或a(think around ) 开头，后跟一个表示对象的字符。有了i它只能作用在物体本身，与a对象上加上尾随空白。例如diw删除当前单词并ci(更改括号之间的所有内容。</p><p>文本对象进行计数。想象一下((( )))，光标在最内括号上或中间，然后d2a(将删除 2 对内括号和中间的所有内容。</p><p>查看:h text-objects所有可用的文本对象。</p><p>I开头进入输入模式</p><p>A末尾进入输入模式<br>  关机重启命令<br>  shutdown -s 指定时间 在指定时间休眠相当于sleep<br>  reboot     重启    但是shutdown和reboot都得在superroot权限下使用<br>   open命令<br>打开文档使用open命令open 软件名需要到软件绝对地址位置<br>   open -a 使用指定程序打开<br>   -n 是在原软件运行的情况下再打开一个新的软件<br>   brew 命令<br>brew相当于一个app store 下载命令行文件只需要<br>brew install 名字。 下载图形化软件只需要价格cask<br>brew cask install qq 卸载也是一样的uninstall<br>brew search name 联网搜索软件是否存在brew中<br>brew upgrade name 更新软件<br>brea reinstall name 重新安装软件<br>brew info name 查看软件安装地址<br>brew cleanup 清理缓存brew doctor brew故障时使用，查看建议升级</p><p>brew list 查看brew下载的所有软件<br>更改列表、跳转列表<br>最近 100 次更改的位置保存在changelist 中。同一行上的几个小的更改将合并在一起，但位置仍然是最后一个更改的位置（如果您在行中间添加了一些内容）。</p><p>每次跳转时，跳转前的位置都会在jumplist 中记住 。跳转列表最多有 100 个条目。每个窗口都有自己的跳转列表。拆分窗口时，会复制跳转列表。</p><p>跳转是以下命令之一：’, &#96;, G, &#x2F;, ?, n, N, %, (, ), [[, ]], {, }, :s, :tag, L, M,H和开始编辑新文件的命令。</p><p>列表列出所有条目转到旧位置转到较新的位置<br>跳转列表:jumps[count]<c-o>[count]<c-i><br>更改列表:changes[count]g;[count]g,<br>当您列出所有条目时，&gt;将使用一个标记来显示当前位置。通常这将低于位置 1，即最新位置。</p><p>如果您希望在重新启动 Vim 后保留这两个列表，则需要使用 viminfo 文件和:h viminfo-‘.</p><p>注意：最后一次跳转前的位置也保留为一个标记 ，可以跳转到 via&#96;&#96;或’’。</p><p>帮助：</p><p>:h changelist<br>:h jumplist<br>撤销树<br>记住文本状态的最新更改。您可以使用撤消来还原更改并使用重做来重新应用以前还原的更改。</p><p>理解它的重要一点是保存最近更改的数据结构不是 队列而是 树！您的更改是树中的节点，每个（但顶部节点）都有一个父节点。每个节点都保存有关更改的文本和时间的信息。一个分支是一系列节点，从任何一个节点开始，一直到顶部节点。当您撤消更改然后插入其他内容时，会创建新分支。</p><p>ifoo<esc><br>obar<esc><br>obaz<esc><br>u<br>oquux<esc><br>现在你有 3 行，撤销树看起来像这样：</p><pre><code> foo(1)   /bar(2)</code></pre><p>   &#x2F;      <br>baz(3)   quux(4)<br>撤销树有 4 个变化。数字代表创建节点的时间。</p><p>现在有两种方法可以遍历这棵树，我们称它们为branch-wise和 time-wise。</p><p>撤消 ( u) 和重做 ( <c-r>) 以分支方式工作。他们在当前分支上下移动。u将文本状态恢复到节点“bar”之一。另一个u 将进一步将文本状态恢复到节点“foo”之一。现在<c-r> 回到节点“bar”<c-r>的状态，再回到节点“quux”的状态。（再也无法使用分支命令到达节点“baz”了。）</p><p>反对这一点，g-并g+按时工作。因此，g-不会像那样恢复到节点“bar”的状态u，而是恢复到按时间顺序排列的先前状态，节点“baz”。另一个g-将状态恢复为节点“bar”等。因此，g-与g+简单地来回走的时间，分别。</p><p>命令&#x2F;映射行动<br>[count]u, :undo [count]撤消 [count] 次更改。<br>[count]<c-r>, :redo重做 [count] 个更改。<br>U撤消对最新更改行的所有更改。<br>[count]g-, :earlier [count]?转到旧文本状态 [count] 次。这 ”？” 可以是“s”、“m”、“h”、“d”或“f”。例如:earlier 2d从 2 天前转到文本状态。:earlier 1f将进入最新文件保存的状态。<br>[count]g+, :later [count]?同上，但方向不同。<br>撤销树保存在内存中，当 Vim 退出时会丢失。有关如何启用持久撤消的信息，请参阅撤消文件。</p><p>如果您对撤销树感到困惑， undotree在可视化它方面做得很好。</p><p>帮助：</p><p>:h undo.txt<br>:h usr_32</p><p>export HOMEBREW_BOTTLE_DOMAIN&#x3D;’’</p><h3 id="光标控制"><a href="#光标控制" class="headerlink" title="光标控制"></a>光标控制</h3><ul><li>ctrl + a: 到行首</li><li>ctrl + e: 行末</li><li>ctrl + f&#x2F;b: 前进后退，相当于左右方向键，但是显然比移开手按方向键更快</li><li>ctrl + p: 上一条命令，相当于方向键上</li><li>ctrl + r: 搜索命令历史，这个大家都应该很熟悉了</li><li>ctrl + d: 删除当前字符</li><li>ctrl + h: 删除之前的字符</li><li>ctrl + w: 删除光标前的单词</li><li>ctrl + k: 删除到文本末尾</li><li>ctrl + t: 交换光标处文本</li><li>⌘ + —&#x2F;+&#x2F;0: 调整字体大小</li><li>⌘ + r:清屏，其实是滚到新的一屏，并没有清空。ctrl + l 也可以做到。</li></ul><h3 id="窗口操作"><a href="#窗口操作" class="headerlink" title="窗口操作"></a>窗口操作</h3><ul><li>新建窗口：shift + command + d（横向）command + d（竖向）</li><li>关闭窗口：shift + command + w</li><li>前一个窗口：command + &#96;</li><li>后一个窗口：command + ~</li><li>进入窗口 1,2,3：option + command + 编号</li></ul><h3 id="标签页操作"><a href="#标签页操作" class="headerlink" title="标签页操作"></a>标签页操作</h3><ul><li>新建标签页: Command + T</li><li>关闭标签页: Command + W</li><li>前一个标签页: Command + 左方向键，Shift + Command + [</li><li>后一个标签页: Command + 右方向键，Shitf + Command + ]</li><li>进入标签页1，2，3…: Command + 标签页编号<br> *Expose 标签页: Option + Command + E（将标签页打撒到全屏，并可以全局搜索所有的标签页）</li></ul><h3 id="面板操作"><a href="#面板操作" class="headerlink" title="面板操作"></a>面板操作</h3><p>垂直分割: Command + D</p><ul><li>水平分割: Shift + Command + D</li><li>前一个面板: Command + [</li><li>后一个面板: Command + ]</li><li>切换到上&#x2F;下&#x2F;左&#x2F;右面板: Option + Command + 上下左右方向键</li></ul><h3 id="其他功能"><a href="#其他功能" class="headerlink" title="其他功能"></a>其他功能</h3><ul><li>支持自定义全局快捷键用于显示和隐藏iTerm2 Preference -&gt; Keys －&gt; Show&#x2F;hide iTerm2 with a system-wide hotkey 打上勾之后</li><li>进入和退出全屏: Command + Enter</li><li>查看当前终端中光标的位置: Command + &#x2F;</li><li>命令自动补全: Command + ;（很少用这个，还是感觉Zsh的补全更好用）</li><li>开启和关闭背景半透明: Command + u</li><li>清屏（重置当前终端）: Command + r</li></ul><h3 id="位置书签"><a href="#位置书签" class="headerlink" title="位置书签"></a>位置书签</h3><p>在当前会话中按Command + Shift + m可以保存当前位置，之后可以按Command + Shift + j跳回这个位置。</p><h3 id="粘贴历史"><a href="#粘贴历史" class="headerlink" title="粘贴历史"></a>粘贴历史</h3><p>使用Command + Shift + h 可以呼出粘贴历史，支持模糊检索。还可以设置将粘贴历史保存在磁盘上（Preferences -&gt; General）</p><h3 id="即时回放"><a href="#即时回放" class="headerlink" title="即时回放"></a>即时回放</h3><p>使用Command + Opt + b 打开即时回放，按Esc退出。即时回放可以记录终端输出的状态，让你“穿越时间”查看终端内容。默认每个会话最多储存4MB的内容，可以在设置中更改（Preferences -&gt; Genernal -&gt; Instant Replay）。</p>]]></content>
      
      
      <categories>
          
          <category> linux基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iterm终端 </tag>
            
            <tag> vim基础 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
